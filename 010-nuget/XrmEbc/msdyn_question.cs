//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XrmEbc
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.2.1.8586")]
	public enum msdyn_questionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Question in a survey.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msdyn_question")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.2.1.8586")]
	public partial class msdyn_question : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_AfterSharingMessage = "msdyn_aftersharingmessage";
			public const string msdyn_AllowIframes = "msdyn_allowiframes";
			public const string msdyn_AnswerTag = "msdyn_answertag";
			public const string msdyn_Columns = "msdyn_columns";
			public const string msdyn_CreateQuestionResponse = "msdyn_createquestionresponse";
			public const string msdyn_CustomerEffortScore = "msdyn_customereffortscore";
			public const string msdyn_CustomerSatisfactionScoreCSAT = "msdyn_customersatisfactionscorecsat";
			public const string msdyn_Description = "msdyn_description";
			public const string msdyn_displaylogic = "msdyn_displaylogic";
			public const string msdyn_EnableSocialSharing = "msdyn_enablesocialsharing";
			public const string msdyn_Facebook = "msdyn_facebook";
			public const string msdyn_FaceExpression = "msdyn_faceexpression";
			public const string msdyn_FaceExpressionPicker = "msdyn_faceexpressionpicker";
			public const string msdyn_FilterComparisonValue = "msdyn_filtercomparisonvalue";
			public const string msdyn_FilteredQuestionId = "msdyn_filteredquestionid";
			public const string msdyn_FilterOperator = "msdyn_filteroperator";
			public const string msdyn_Format = "msdyn_format";
			public const string msdyn_GlobalOrderIndex = "msdyn_globalorderindex";
			public const string msdyn_Google = "msdyn_google";
			public const string msdyn_Help = "msdyn_help";
			public const string msdyn_html = "msdyn_html";
			public const string msdyn_InputAlignment = "msdyn_inputalignment";
			public const string msdyn_Layouttype = "msdyn_layouttype";
			public const string msdyn_LinkedIn = "msdyn_linkedin";
			public const string msdyn_LinkQuestion = "msdyn_linkquestion";
			public const string msdyn_Maximum = "msdyn_maximum";
			public const string msdyn_MeasuringAnswer = "msdyn_measuringanswer";
			public const string msdyn_MeasuringQuestion = "msdyn_measuringquestion";
			public const string msdyn_Minimum = "msdyn_minimum";
			public const string msdyn_MinimumResponsesRanked = "msdyn_minimumresponsesranked";
			public const string msdyn_multipleresponsetype = "msdyn_multipleresponsetype";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_NetPromoterScore = "msdyn_netpromoterscore";
			public const string msdyn_NumberType = "msdyn_numbertype";
			public const string msdyn_OrderIndex = "msdyn_orderindex";
			public const string msdyn_PageId = "msdyn_pageid";
			public const string msdyn_PickResponses = "msdyn_pickresponses";
			public const string msdyn_PipeType = "msdyn_pipetype";
			public const string msdyn_pluginignore = "msdyn_pluginignore";
			public const string msdyn_QueryString = "msdyn_querystring";
			public const string msdyn_QuestionGroupId = "msdyn_questiongroupid";
			public const string msdyn_QuestionGroupType = "msdyn_questiongrouptype";
			public const string msdyn_questionId = "msdyn_questionid";
			public const string Id = "msdyn_questionid";
			public const string msdyn_QuestionLayoutType = "msdyn_questionlayouttype";
			public const string msdyn_QuestionText = "msdyn_questiontext";
			public const string msdyn_QuestionTextAlignment = "msdyn_questiontextalignment";
			public const string msdyn_QuestionType = "msdyn_questiontype";
			public const string msdyn_QuestionTypeLookup = "msdyn_questiontypelookup";
			public const string msdyn_RandomiseResponseOrder = "msdyn_randomiseresponseorder";
			public const string msdyn_RankFooterText = "msdyn_rankfootertext";
			public const string msdyn_RankHeaderText = "msdyn_rankheadertext";
			public const string msdyn_RatingHalfStar = "msdyn_ratinghalfstar";
			public const string msdyn_RatingImageSize = "msdyn_ratingimagesize";
			public const string msdyn_RatingImageType = "msdyn_ratingimagetype";
			public const string msdyn_RatingNumberOfItems = "msdyn_ratingnumberofitems";
			public const string msdyn_ratingshowcancel = "msdyn_ratingshowcancel";
			public const string msdyn_RatingTooltips = "msdyn_ratingtooltips";
			public const string msdyn_RegularExpressionValidation = "msdyn_regularexpressionvalidation";
			public const string msdyn_ReportingAggregation = "msdyn_reportingaggregation";
			public const string msdyn_ReportingMax = "msdyn_reportingmax";
			public const string msdyn_ReportingMin = "msdyn_reportingmin";
			public const string msdyn_ReportingText = "msdyn_reportingtext";
			public const string msdyn_Required = "msdyn_required";
			public const string msdyn_RequiredMessage = "msdyn_requiredmessage";
			public const string msdyn_RequireResponseForImport = "msdyn_requireresponseforimport";
			public const string msdyn_ResponseCount = "msdyn_responsecount";
			public const string msdyn_ResponseMapping = "msdyn_responsemapping";
			public const string msdyn_Responses = "msdyn_responses";
			public const string msdyn_scaleleftlabel = "msdyn_scaleleftlabel";
			public const string msdyn_ScaleMin = "msdyn_scalemin";
			public const string msdyn_ScaleNoOfItems = "msdyn_scalenoofitems";
			public const string msdyn_scalerightlabel = "msdyn_scalerightlabel";
			public const string msdyn_ScoreDefinition = "msdyn_scoredefinition";
			public const string msdyn_ScoreMaxValue = "msdyn_scoremaxvalue";
			public const string msdyn_ScoreMinValue = "msdyn_scoreminvalue";
			public const string msdyn_SetDirty = "msdyn_setdirty";
			public const string msdyn_SharingLink = "msdyn_sharinglink";
			public const string msdyn_SharingMessage = "msdyn_sharingmessage";
			public const string msdyn_SharingText = "msdyn_sharingtext";
			public const string msdyn_ShowAsHelp = "msdyn_showashelp";
			public const string msdyn_ShowImagesForSingleResponse = "msdyn_showimagesforsingleresponse";
			public const string msdyn_singleresponsetype = "msdyn_singleresponsetype";
			public const string msdyn_SurveyId = "msdyn_surveyid";
			public const string msdyn_Template = "msdyn_template";
			public const string msdyn_Tooltip = "msdyn_tooltip";
			public const string msdyn_Trigger = "msdyn_trigger";
			public const string msdyn_Twitter = "msdyn_twitter";
			public const string msdyn_Visibility = "msdyn_visibility";
			public const string msdyn_Yammer = "msdyn_yammer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string business_unit_msdyn_question = "business_unit_msdyn_question";
			public const string lk_msdyn_question_createdby = "lk_msdyn_question_createdby";
			public const string lk_msdyn_question_createdonbehalfby = "lk_msdyn_question_createdonbehalfby";
			public const string lk_msdyn_question_modifiedby = "lk_msdyn_question_modifiedby";
			public const string lk_msdyn_question_modifiedonbehalfby = "lk_msdyn_question_modifiedonbehalfby";
			public const string msdyn_msdyn_answer_msdyn_question_MeasuringAnswer = "msdyn_msdyn_answer_msdyn_question_MeasuringAnswer";
			public const string Referencingmsdyn_msdyn_question_msdyn_question_MeasuringQuestion = "msdyn_msdyn_question_msdyn_question_MeasuringQuestion";
			public const string msdyn_page_question = "msdyn_page_question";
			public const string Referencingmsdyn_question_filtered_question = "msdyn_question_filtered_question";
			public const string msdyn_question_questiontype = "msdyn_question_questiontype";
			public const string msdyn_questiongroup_question = "msdyn_questiongroup_question";
			public const string msdyn_survey_msdyn_question_SurveyId = "msdyn_survey_msdyn_question_SurveyId";
			public const string team_msdyn_question = "team_msdyn_question";
			public const string user_msdyn_question = "user_msdyn_question";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_question() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "msdyn_question";
		
		public const int EntityTypeCode = 10296;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Shows the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows the sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Short text to display to the respondent after a respondent has shared result via social media
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_aftersharingmessage")]
		public string msdyn_AfterSharingMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_aftersharingmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_AfterSharingMessage");
				this.SetAttributeValue("msdyn_aftersharingmessage", value);
				this.OnPropertyChanged("msdyn_AfterSharingMessage");
			}
		}
		
		/// <summary>
		/// Select whether to allow iFrames in the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_allowiframes")]
		public System.Nullable<bool> msdyn_AllowIframes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_allowiframes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_AllowIframes");
				this.SetAttributeValue("msdyn_allowiframes", value);
				this.OnPropertyChanged("msdyn_AllowIframes");
			}
		}
		
		/// <summary>
		/// Store the answer response to a tag that can be replaced in subsequent questions and answers in the survey at run time.  Use a tag such as _UOM_ and embed this in the question and answer text.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_answertag")]
		public string msdyn_AnswerTag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_answertag");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_AnswerTag");
				this.SetAttributeValue("msdyn_answertag", value);
				this.OnPropertyChanged("msdyn_AnswerTag");
			}
		}
		
		/// <summary>
		/// The number of columns to use for a big button answer type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_columns")]
		public System.Nullable<int> msdyn_Columns
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_columns");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Columns");
				this.SetAttributeValue("msdyn_columns", value);
				this.OnPropertyChanged("msdyn_Columns");
			}
		}
		
		/// <summary>
		/// Create a question response.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_createquestionresponse")]
		public object msdyn_CreateQuestionResponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_createquestionresponse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_CreateQuestionResponse");
				this.SetAttributeValue("msdyn_createquestionresponse", value);
				this.OnPropertyChanged("msdyn_CreateQuestionResponse");
			}
		}
		
		/// <summary>
		/// Is this question a CES score question?  If so, data is stored in a separate place on the survey response entity and other features are enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_customereffortscore")]
		public System.Nullable<bool> msdyn_CustomerEffortScore
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_customereffortscore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_CustomerEffortScore");
				this.SetAttributeValue("msdyn_customereffortscore", value);
				this.OnPropertyChanged("msdyn_CustomerEffortScore");
			}
		}
		
		/// <summary>
		/// Is this question a CSAT question?  If so certain features are enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_customersatisfactionscorecsat")]
		public System.Nullable<bool> msdyn_CustomerSatisfactionScoreCSAT
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_customersatisfactionscorecsat");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_CustomerSatisfactionScoreCSAT");
				this.SetAttributeValue("msdyn_customersatisfactionscorecsat", value);
				this.OnPropertyChanged("msdyn_CustomerSatisfactionScoreCSAT");
			}
		}
		
		/// <summary>
		/// Description of the question and its purpose.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_description")]
		public string msdyn_Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Description");
				this.SetAttributeValue("msdyn_description", value);
				this.OnPropertyChanged("msdyn_Description");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_displaylogic")]
		public object msdyn_displaylogic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_displaylogic");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_displaylogic");
				this.SetAttributeValue("msdyn_displaylogic", value);
				this.OnPropertyChanged("msdyn_displaylogic");
			}
		}
		
		/// <summary>
		/// Enables respondents to share the result if positive through social media.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_enablesocialsharing")]
		public System.Nullable<bool> msdyn_EnableSocialSharing
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_enablesocialsharing");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_EnableSocialSharing");
				this.SetAttributeValue("msdyn_enablesocialsharing", value);
				this.OnPropertyChanged("msdyn_EnableSocialSharing");
			}
		}
		
		/// <summary>
		/// Allow respondent to share the result via Facebook?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_facebook")]
		public System.Nullable<bool> msdyn_Facebook
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_facebook");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Facebook");
				this.SetAttributeValue("msdyn_facebook", value);
				this.OnPropertyChanged("msdyn_Facebook");
			}
		}
		
		/// <summary>
		/// Select the face expression.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_faceexpression")]
		public object msdyn_FaceExpression
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_faceexpression");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_FaceExpression");
				this.SetAttributeValue("msdyn_faceexpression", value);
				this.OnPropertyChanged("msdyn_FaceExpression");
			}
		}
		
		/// <summary>
		/// Select a face expression.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_faceexpressionpicker")]
		public object msdyn_FaceExpressionPicker
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_faceexpressionpicker");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_FaceExpressionPicker");
				this.SetAttributeValue("msdyn_faceexpressionpicker", value);
				this.OnPropertyChanged("msdyn_FaceExpressionPicker");
			}
		}
		
		/// <summary>
		/// Shows the filter comparison value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_filtercomparisonvalue")]
		public string msdyn_FilterComparisonValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_filtercomparisonvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_FilterComparisonValue");
				this.SetAttributeValue("msdyn_filtercomparisonvalue", value);
				this.OnPropertyChanged("msdyn_FilterComparisonValue");
			}
		}
		
		/// <summary>
		/// Shows the filtering question (if any).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_filteredquestionid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_FilteredQuestionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_filteredquestionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_FilteredQuestionId");
				this.SetAttributeValue("msdyn_filteredquestionid", value);
				this.OnPropertyChanged("msdyn_FilteredQuestionId");
			}
		}
		
		/// <summary>
		/// Select the filter operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_filteroperator")]
		public object msdyn_FilterOperator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_filteroperator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_FilterOperator");
				this.SetAttributeValue("msdyn_filteroperator", value);
				this.OnPropertyChanged("msdyn_FilterOperator");
			}
		}
		
		/// <summary>
		/// Format of the response
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_format")]
		public string msdyn_Format
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_format");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Format");
				this.SetAttributeValue("msdyn_format", value);
				this.OnPropertyChanged("msdyn_Format");
			}
		}
		
		/// <summary>
		/// Shows the global order index.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_globalorderindex")]
		public System.Nullable<int> msdyn_GlobalOrderIndex
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_globalorderindex");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_GlobalOrderIndex");
				this.SetAttributeValue("msdyn_globalorderindex", value);
				this.OnPropertyChanged("msdyn_GlobalOrderIndex");
			}
		}
		
		/// <summary>
		/// Allow respondent to share the result via Google +
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_google")]
		public System.Nullable<bool> msdyn_Google
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_google");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Google");
				this.SetAttributeValue("msdyn_google", value);
				this.OnPropertyChanged("msdyn_Google");
			}
		}
		
		/// <summary>
		/// Type the Help text.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_help")]
		public string msdyn_Help
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_help");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Help");
				this.SetAttributeValue("msdyn_help", value);
				this.OnPropertyChanged("msdyn_Help");
			}
		}
		
		/// <summary>
		/// Html of question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_html")]
		public string msdyn_html
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_html");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_html");
				this.SetAttributeValue("msdyn_html", value);
				this.OnPropertyChanged("msdyn_html");
			}
		}
		
		/// <summary>
		/// Alignment of the input control associated with the question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_inputalignment")]
		public object msdyn_InputAlignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_inputalignment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_InputAlignment");
				this.SetAttributeValue("msdyn_inputalignment", value);
				this.OnPropertyChanged("msdyn_InputAlignment");
			}
		}
		
		/// <summary>
		/// Single question per line or multiple question per line?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_layouttype")]
		public object msdyn_Layouttype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_layouttype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Layouttype");
				this.SetAttributeValue("msdyn_layouttype", value);
				this.OnPropertyChanged("msdyn_Layouttype");
			}
		}
		
		/// <summary>
		/// Allow the respondent to share the result via LinkedIn?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_linkedin")]
		public System.Nullable<bool> msdyn_LinkedIn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_linkedin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_LinkedIn");
				this.SetAttributeValue("msdyn_linkedin", value);
				this.OnPropertyChanged("msdyn_LinkedIn");
			}
		}
		
		/// <summary>
		/// Common question linking more than one question in separate surveys.  Used for reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_linkquestion")]
		public object msdyn_LinkQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_linkquestion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_LinkQuestion");
				this.SetAttributeValue("msdyn_linkquestion", value);
				this.OnPropertyChanged("msdyn_LinkQuestion");
			}
		}
		
		/// <summary>
		/// Maximum value for this question.  Used for multiple question types.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_maximum")]
		public System.Nullable<int> msdyn_Maximum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_maximum");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Maximum");
				this.SetAttributeValue("msdyn_maximum", value);
				this.OnPropertyChanged("msdyn_Maximum");
			}
		}
		
		/// <summary>
		/// Used to configure responses you want to compare, for example, "rank-n-rate" for expection vs satisfaction). Usually set at the grid and automatically propagated down.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_measuringanswer")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_MeasuringAnswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_measuringanswer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_MeasuringAnswer");
				this.SetAttributeValue("msdyn_measuringanswer", value);
				this.OnPropertyChanged("msdyn_MeasuringAnswer");
			}
		}
		
		/// <summary>
		/// Use to configure responses you want to compare, for example, "rank-n-rate" for expectation vs satisfaction.  Usually set at the grid and automatically propagated down.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_measuringquestion")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_MeasuringQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_measuringquestion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_MeasuringQuestion");
				this.SetAttributeValue("msdyn_measuringquestion", value);
				this.OnPropertyChanged("msdyn_MeasuringQuestion");
			}
		}
		
		/// <summary>
		/// Minimum value for the question.  Used for multiple question types.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_minimum")]
		public System.Nullable<int> msdyn_Minimum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_minimum");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Minimum");
				this.SetAttributeValue("msdyn_minimum", value);
				this.OnPropertyChanged("msdyn_Minimum");
			}
		}
		
		/// <summary>
		/// The minimum number of responses that respondents are required to select
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_minimumresponsesranked")]
		public System.Nullable<int> msdyn_MinimumResponsesRanked
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_minimumresponsesranked");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_MinimumResponsesRanked");
				this.SetAttributeValue("msdyn_minimumresponsesranked", value);
				this.OnPropertyChanged("msdyn_MinimumResponsesRanked");
			}
		}
		
		/// <summary>
		/// Big buttons or check boxes?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_multipleresponsetype")]
		public object msdyn_multipleresponsetype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_multipleresponsetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_multipleresponsetype");
				this.SetAttributeValue("msdyn_multipleresponsetype", value);
				this.OnPropertyChanged("msdyn_multipleresponsetype");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_name")]
		public string msdyn_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_name");
				this.SetAttributeValue("msdyn_name", value);
				this.OnPropertyChanged("msdyn_name");
			}
		}
		
		/// <summary>
		/// Is question Net Promoter Score?  If so, several other features are enabled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_netpromoterscore")]
		public System.Nullable<bool> msdyn_NetPromoterScore
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_netpromoterscore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_NetPromoterScore");
				this.SetAttributeValue("msdyn_netpromoterscore", value);
				this.OnPropertyChanged("msdyn_NetPromoterScore");
			}
		}
		
		/// <summary>
		/// Whole number or decimal?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_numbertype")]
		public object msdyn_NumberType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_numbertype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_NumberType");
				this.SetAttributeValue("msdyn_numbertype", value);
				this.OnPropertyChanged("msdyn_NumberType");
			}
		}
		
		/// <summary>
		/// Shows the order index.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orderindex")]
		public System.Nullable<int> msdyn_OrderIndex
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_orderindex");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_OrderIndex");
				this.SetAttributeValue("msdyn_orderindex", value);
				this.OnPropertyChanged("msdyn_OrderIndex");
			}
		}
		
		/// <summary>
		/// Shows the related page.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pageid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_PageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_pageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_PageId");
				this.SetAttributeValue("msdyn_pageid", value);
				this.OnPropertyChanged("msdyn_PageId");
			}
		}
		
		/// <summary>
		/// Allow respondents to choose items to rank.  If no then rankings can be ordered only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pickresponses")]
		public System.Nullable<bool> msdyn_PickResponses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_pickresponses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_PickResponses");
				this.SetAttributeValue("msdyn_pickresponses", value);
				this.OnPropertyChanged("msdyn_PickResponses");
			}
		}
		
		/// <summary>
		/// Select the type of pipe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pipetype")]
		public object msdyn_PipeType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_pipetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_PipeType");
				this.SetAttributeValue("msdyn_pipetype", value);
				this.OnPropertyChanged("msdyn_PipeType");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pluginignore")]
		public string msdyn_pluginignore
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_pluginignore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_pluginignore");
				this.SetAttributeValue("msdyn_pluginignore", value);
				this.OnPropertyChanged("msdyn_pluginignore");
			}
		}
		
		/// <summary>
		/// If the invitation URL contains a query string argument that matches the argument selected, then the answer will be pre-populated.  Example: [url]?a=Good or [url]?ai=2
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_querystring")]
		public object msdyn_QueryString
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_querystring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QueryString");
				this.SetAttributeValue("msdyn_querystring", value);
				this.OnPropertyChanged("msdyn_QueryString");
			}
		}
		
		/// <summary>
		/// Shows the unique reference ID relating to the question group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiongroupid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_QuestionGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_questiongroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionGroupId");
				this.SetAttributeValue("msdyn_questiongroupid", value);
				this.OnPropertyChanged("msdyn_QuestionGroupId");
			}
		}
		
		/// <summary>
		/// Parent question group type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiongrouptype")]
		public object msdyn_QuestionGroupType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_questiongrouptype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionGroupType");
				this.SetAttributeValue("msdyn_questiongrouptype", value);
				this.OnPropertyChanged("msdyn_QuestionGroupType");
			}
		}
		
		/// <summary>
		/// Shows the entity instances.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questionid")]
		public System.Nullable<System.Guid> msdyn_questionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("msdyn_questionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questionId");
				this.SetAttributeValue("msdyn_questionid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("msdyn_questionId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questionid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.msdyn_questionId = value;
			}
		}
		
		/// <summary>
		/// Layout of the question as it appears on the survey to the respondent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questionlayouttype")]
		public object msdyn_QuestionLayoutType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_questionlayouttype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionLayoutType");
				this.SetAttributeValue("msdyn_questionlayouttype", value);
				this.OnPropertyChanged("msdyn_QuestionLayoutType");
			}
		}
		
		/// <summary>
		/// HTML Text block for the question label
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiontext")]
		public string msdyn_QuestionText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_questiontext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionText");
				this.SetAttributeValue("msdyn_questiontext", value);
				this.OnPropertyChanged("msdyn_QuestionText");
			}
		}
		
		/// <summary>
		/// Alignment of the question label associated with question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiontextalignment")]
		public object msdyn_QuestionTextAlignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_questiontextalignment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionTextAlignment");
				this.SetAttributeValue("msdyn_questiontextalignment", value);
				this.OnPropertyChanged("msdyn_QuestionTextAlignment");
			}
		}
		
		/// <summary>
		/// Type of question to display
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiontype")]
		public object msdyn_QuestionType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_questiontype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionType");
				this.SetAttributeValue("msdyn_questiontype", value);
				this.OnPropertyChanged("msdyn_QuestionType");
			}
		}
		
		/// <summary>
		/// Shows the question type associated with the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiontypelookup")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_QuestionTypeLookup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_questiontypelookup");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_QuestionTypeLookup");
				this.SetAttributeValue("msdyn_questiontypelookup", value);
				this.OnPropertyChanged("msdyn_QuestionTypeLookup");
			}
		}
		
		/// <summary>
		/// Indicates if the responses should be randomized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_randomiseresponseorder")]
		public System.Nullable<bool> msdyn_RandomiseResponseOrder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_randomiseresponseorder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RandomiseResponseOrder");
				this.SetAttributeValue("msdyn_randomiseresponseorder", value);
				this.OnPropertyChanged("msdyn_RandomiseResponseOrder");
			}
		}
		
		/// <summary>
		/// Text to appear at the bottom of the ranking question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_rankfootertext")]
		public string msdyn_RankFooterText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_rankfootertext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RankFooterText");
				this.SetAttributeValue("msdyn_rankfootertext", value);
				this.OnPropertyChanged("msdyn_RankFooterText");
			}
		}
		
		/// <summary>
		/// Header text displayed to respondents at the top of the ranking question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_rankheadertext")]
		public string msdyn_RankHeaderText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_rankheadertext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RankHeaderText");
				this.SetAttributeValue("msdyn_rankheadertext", value);
				this.OnPropertyChanged("msdyn_RankHeaderText");
			}
		}
		
		/// <summary>
		/// Display half a rating option to respondent?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratinghalfstar")]
		public System.Nullable<bool> msdyn_RatingHalfStar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ratinghalfstar");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingHalfStar");
				this.SetAttributeValue("msdyn_ratinghalfstar", value);
				this.OnPropertyChanged("msdyn_RatingHalfStar");
			}
		}
		
		/// <summary>
		/// How big is the rating?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingimagesize")]
		public object msdyn_RatingImageSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_ratingimagesize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingImageSize");
				this.SetAttributeValue("msdyn_ratingimagesize", value);
				this.OnPropertyChanged("msdyn_RatingImageSize");
			}
		}
		
		/// <summary>
		/// Rating image type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingimagetype")]
		public object msdyn_RatingImageType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_ratingimagetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingImageType");
				this.SetAttributeValue("msdyn_ratingimagetype", value);
				this.OnPropertyChanged("msdyn_RatingImageType");
			}
		}
		
		/// <summary>
		/// Number of items to display
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingnumberofitems")]
		public System.Nullable<int> msdyn_RatingNumberOfItems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_ratingnumberofitems");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingNumberOfItems");
				this.SetAttributeValue("msdyn_ratingnumberofitems", value);
				this.OnPropertyChanged("msdyn_RatingNumberOfItems");
			}
		}
		
		/// <summary>
		/// Show the cancel button on the ratings
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingshowcancel")]
		public System.Nullable<bool> msdyn_ratingshowcancel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ratingshowcancel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ratingshowcancel");
				this.SetAttributeValue("msdyn_ratingshowcancel", value);
				this.OnPropertyChanged("msdyn_ratingshowcancel");
			}
		}
		
		/// <summary>
		/// Carriage return separated list of ratings
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingtooltips")]
		public string msdyn_RatingTooltips
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_ratingtooltips");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingTooltips");
				this.SetAttributeValue("msdyn_ratingtooltips", value);
				this.OnPropertyChanged("msdyn_RatingTooltips");
			}
		}
		
		/// <summary>
		/// Regular expression message
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_regularexpressionvalidation")]
		public string msdyn_RegularExpressionValidation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_regularexpressionvalidation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RegularExpressionValidation");
				this.SetAttributeValue("msdyn_regularexpressionvalidation", value);
				this.OnPropertyChanged("msdyn_RegularExpressionValidation");
			}
		}
		
		/// <summary>
		/// Select the reporting aggregation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reportingaggregation")]
		public object msdyn_ReportingAggregation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_reportingaggregation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ReportingAggregation");
				this.SetAttributeValue("msdyn_reportingaggregation", value);
				this.OnPropertyChanged("msdyn_ReportingAggregation");
			}
		}
		
		/// <summary>
		/// Shows the maximum value that's possible for this question, which is used for reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reportingmax")]
		public System.Nullable<decimal> msdyn_ReportingMax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msdyn_reportingmax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ReportingMax");
				this.SetAttributeValue("msdyn_reportingmax", value);
				this.OnPropertyChanged("msdyn_ReportingMax");
			}
		}
		
		/// <summary>
		/// Enter the reporting minimum.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reportingmin")]
		public System.Nullable<decimal> msdyn_ReportingMin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msdyn_reportingmin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ReportingMin");
				this.SetAttributeValue("msdyn_reportingmin", value);
				this.OnPropertyChanged("msdyn_ReportingMin");
			}
		}
		
		/// <summary>
		/// Text, usually abbreviated, used for reporting.  This is overridden by the Linked Question Reporting text if this question is associated with linked question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reportingtext")]
		public string msdyn_ReportingText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_reportingtext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ReportingText");
				this.SetAttributeValue("msdyn_reportingtext", value);
				this.OnPropertyChanged("msdyn_ReportingText");
			}
		}
		
		/// <summary>
		/// Is the respondent required to complete this field
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_required")]
		public object msdyn_Required
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_required");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Required");
				this.SetAttributeValue("msdyn_required", value);
				this.OnPropertyChanged("msdyn_Required");
			}
		}
		
		/// <summary>
		/// Message displayed if validation fails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requiredmessage")]
		public string msdyn_RequiredMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_requiredmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RequiredMessage");
				this.SetAttributeValue("msdyn_requiredmessage", value);
				this.OnPropertyChanged("msdyn_RequiredMessage");
			}
		}
		
		/// <summary>
		/// Require a response for import.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requireresponseforimport")]
		public System.Nullable<bool> msdyn_RequireResponseForImport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_requireresponseforimport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RequireResponseForImport");
				this.SetAttributeValue("msdyn_requireresponseforimport", value);
				this.OnPropertyChanged("msdyn_RequireResponseForImport");
			}
		}
		
		/// <summary>
		/// Shows response count.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_responsecount")]
		public System.Nullable<int> msdyn_ResponseCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_responsecount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ResponseCount");
				this.SetAttributeValue("msdyn_responsecount", value);
				this.OnPropertyChanged("msdyn_ResponseCount");
			}
		}
		
		/// <summary>
		/// Shows response mapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_responsemapping")]
		public object msdyn_ResponseMapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_responsemapping");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ResponseMapping");
				this.SetAttributeValue("msdyn_responsemapping", value);
				this.OnPropertyChanged("msdyn_ResponseMapping");
			}
		}
		
		/// <summary>
		/// Carriage return separated list of responses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_responses")]
		public string msdyn_Responses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_responses");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Responses");
				this.SetAttributeValue("msdyn_responses", value);
				this.OnPropertyChanged("msdyn_Responses");
			}
		}
		
		/// <summary>
		/// Text displayed to the left of the scale
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scaleleftlabel")]
		public string msdyn_scaleleftlabel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_scaleleftlabel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_scaleleftlabel");
				this.SetAttributeValue("msdyn_scaleleftlabel", value);
				this.OnPropertyChanged("msdyn_scaleleftlabel");
			}
		}
		
		/// <summary>
		/// Minimum value for the scale
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scalemin")]
		public System.Nullable<int> msdyn_ScaleMin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scalemin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScaleMin");
				this.SetAttributeValue("msdyn_scalemin", value);
				this.OnPropertyChanged("msdyn_ScaleMin");
			}
		}
		
		/// <summary>
		/// Number of items to the scale
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scalenoofitems")]
		public System.Nullable<int> msdyn_ScaleNoOfItems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scalenoofitems");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScaleNoOfItems");
				this.SetAttributeValue("msdyn_scalenoofitems", value);
				this.OnPropertyChanged("msdyn_ScaleNoOfItems");
			}
		}
		
		/// <summary>
		/// Text displayed to the right of the scale
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scalerightlabel")]
		public string msdyn_scalerightlabel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_scalerightlabel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_scalerightlabel");
				this.SetAttributeValue("msdyn_scalerightlabel", value);
				this.OnPropertyChanged("msdyn_scalerightlabel");
			}
		}
		
		/// <summary>
		/// Type of scoring / weighting for this question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoredefinition")]
		public object msdyn_ScoreDefinition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_scoredefinition");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreDefinition");
				this.SetAttributeValue("msdyn_scoredefinition", value);
				this.OnPropertyChanged("msdyn_ScoreDefinition");
			}
		}
		
		/// <summary>
		/// Maximum score value
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoremaxvalue")]
		public System.Nullable<int> msdyn_ScoreMaxValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scoremaxvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreMaxValue");
				this.SetAttributeValue("msdyn_scoremaxvalue", value);
				this.OnPropertyChanged("msdyn_ScoreMaxValue");
			}
		}
		
		/// <summary>
		/// Minimum score value
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoreminvalue")]
		public System.Nullable<int> msdyn_ScoreMinValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scoreminvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreMinValue");
				this.SetAttributeValue("msdyn_scoreminvalue", value);
				this.OnPropertyChanged("msdyn_ScoreMinValue");
			}
		}
		
		/// <summary>
		/// Select whether to check if the question is in a consistent state.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_setdirty")]
		public string msdyn_SetDirty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_setdirty");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SetDirty");
				this.SetAttributeValue("msdyn_setdirty", value);
				this.OnPropertyChanged("msdyn_SetDirty");
			}
		}
		
		/// <summary>
		/// Link that respondents can share via social media
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sharinglink")]
		public string msdyn_SharingLink
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_sharinglink");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SharingLink");
				this.SetAttributeValue("msdyn_sharinglink", value);
				this.OnPropertyChanged("msdyn_SharingLink");
			}
		}
		
		/// <summary>
		/// Message that respondents are suggested to share via social media
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sharingmessage")]
		public string msdyn_SharingMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_sharingmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SharingMessage");
				this.SetAttributeValue("msdyn_sharingmessage", value);
				this.OnPropertyChanged("msdyn_SharingMessage");
			}
		}
		
		/// <summary>
		/// Message displayed to the respondent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sharingtext")]
		public string msdyn_SharingText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_sharingtext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SharingText");
				this.SetAttributeValue("msdyn_sharingtext", value);
				this.OnPropertyChanged("msdyn_SharingText");
			}
		}
		
		/// <summary>
		/// Show as help.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_showashelp")]
		public System.Nullable<bool> msdyn_ShowAsHelp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_showashelp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ShowAsHelp");
				this.SetAttributeValue("msdyn_showashelp", value);
				this.OnPropertyChanged("msdyn_ShowAsHelp");
			}
		}
		
		/// <summary>
		/// Enables images to be shown for single response questions
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_showimagesforsingleresponse")]
		public System.Nullable<bool> msdyn_ShowImagesForSingleResponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_showimagesforsingleresponse");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ShowImagesForSingleResponse");
				this.SetAttributeValue("msdyn_showimagesforsingleresponse", value);
				this.OnPropertyChanged("msdyn_ShowImagesForSingleResponse");
			}
		}
		
		/// <summary>
		/// Single select question type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_singleresponsetype")]
		public object msdyn_singleresponsetype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_singleresponsetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_singleresponsetype");
				this.SetAttributeValue("msdyn_singleresponsetype", value);
				this.OnPropertyChanged("msdyn_singleresponsetype");
			}
		}
		
		/// <summary>
		/// Shows the survey associated with the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_surveyid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_SurveyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_surveyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SurveyId");
				this.SetAttributeValue("msdyn_surveyid", value);
				this.OnPropertyChanged("msdyn_SurveyId");
			}
		}
		
		/// <summary>
		/// Select the template to use for the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_template")]
		public System.Nullable<bool> msdyn_Template
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_template");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Template");
				this.SetAttributeValue("msdyn_template", value);
				this.OnPropertyChanged("msdyn_Template");
			}
		}
		
		/// <summary>
		/// Text to display to the respondent when the mouse is hovered over the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_tooltip")]
		public string msdyn_Tooltip
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_tooltip");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Tooltip");
				this.SetAttributeValue("msdyn_tooltip", value);
				this.OnPropertyChanged("msdyn_Tooltip");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_trigger")]
		public string msdyn_Trigger
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_trigger");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Trigger");
				this.SetAttributeValue("msdyn_trigger", value);
				this.OnPropertyChanged("msdyn_Trigger");
			}
		}
		
		/// <summary>
		/// Allow respondents to share the response via Twitter
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_twitter")]
		public System.Nullable<bool> msdyn_Twitter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_twitter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Twitter");
				this.SetAttributeValue("msdyn_twitter", value);
				this.OnPropertyChanged("msdyn_Twitter");
			}
		}
		
		/// <summary>
		/// Is the question visible by default?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_visibility")]
		public object msdyn_Visibility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_visibility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Visibility");
				this.SetAttributeValue("msdyn_visibility", value);
				this.OnPropertyChanged("msdyn_Visibility");
			}
		}
		
		/// <summary>
		/// Allow the respondent to be shared via Yammer?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_yammer")]
		public System.Nullable<bool> msdyn_Yammer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_yammer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Yammer");
				this.SetAttributeValue("msdyn_yammer", value);
				this.OnPropertyChanged("msdyn_Yammer");
			}
		}
		
		/// <summary>
		/// Shows the date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Shows the business unit that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Shows the status of the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<XrmEbc.msdyn_questionState> statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((XrmEbc.msdyn_questionState)(System.Enum.ToObject(typeof(XrmEbc.msdyn_questionState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value.Value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
		
		/// <summary>
		/// Shows the reason for the status of the question.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public object statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statuscode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Shows the time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_feedbackmapping> msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_feedbackmapping>("msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId");
				this.SetRelatedEntities<XrmEbc.msdyn_feedbackmapping>("msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId", null, value);
				this.OnPropertyChanged("msdyn_msdyn_question_msdyn_feedbackmapping_QuestionId");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_question_msdyn_question_MeasuringQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_question> Referencedmsdyn_msdyn_question_msdyn_question_MeasuringQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedmsdyn_msdyn_question_msdyn_question_MeasuringQuestion");
				this.SetRelatedEntities<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedmsdyn_msdyn_question_msdyn_question_MeasuringQuestion");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_questiongroup> msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion");
				this.SetRelatedEntities<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion", null, value);
				this.OnPropertyChanged("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_question_msdyn_responseaction_Question
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_responseaction_Question")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_responseaction> msdyn_msdyn_question_msdyn_responseaction_Question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_responseaction>("msdyn_msdyn_question_msdyn_responseaction_Question", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_question_msdyn_responseaction_Question");
				this.SetRelatedEntities<XrmEbc.msdyn_responseaction>("msdyn_msdyn_question_msdyn_responseaction_Question", null, value);
				this.OnPropertyChanged("msdyn_msdyn_question_msdyn_responseaction_Question");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_survey> msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_survey>("msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion");
				this.SetRelatedEntities<XrmEbc.msdyn_survey>("msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion", null, value);
				this.OnPropertyChanged("msdyn_msdyn_question_msdyn_survey_KeyMeasureQuestion");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<XrmEbc.ActivityPointer> msdyn_question_ActivityPointers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.ActivityPointer>("msdyn_question_ActivityPointers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_ActivityPointers");
				this.SetRelatedEntities<XrmEbc.ActivityPointer>("msdyn_question_ActivityPointers", null, value);
				this.OnPropertyChanged("msdyn_question_ActivityPointers");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_adx_alertsubscriptions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_adx_alertsubscriptions")]
		public System.Collections.Generic.IEnumerable<XrmEbc.adx_alertsubscription> msdyn_question_adx_alertsubscriptions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.adx_alertsubscription>("msdyn_question_adx_alertsubscriptions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_adx_alertsubscriptions");
				this.SetRelatedEntities<XrmEbc.adx_alertsubscription>("msdyn_question_adx_alertsubscriptions", null, value);
				this.OnPropertyChanged("msdyn_question_adx_alertsubscriptions");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_adx_inviteredemptions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_adx_inviteredemptions")]
		public System.Collections.Generic.IEnumerable<XrmEbc.adx_inviteredemption> msdyn_question_adx_inviteredemptions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.adx_inviteredemption>("msdyn_question_adx_inviteredemptions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_adx_inviteredemptions");
				this.SetRelatedEntities<XrmEbc.adx_inviteredemption>("msdyn_question_adx_inviteredemptions", null, value);
				this.OnPropertyChanged("msdyn_question_adx_inviteredemptions");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_adx_portalcomments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_adx_portalcomments")]
		public System.Collections.Generic.IEnumerable<XrmEbc.adx_portalcomment> msdyn_question_adx_portalcomments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.adx_portalcomment>("msdyn_question_adx_portalcomments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_adx_portalcomments");
				this.SetRelatedEntities<XrmEbc.adx_portalcomment>("msdyn_question_adx_portalcomments", null, value);
				this.OnPropertyChanged("msdyn_question_adx_portalcomments");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_answer
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_answer")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_answer> msdyn_question_answer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_question_answer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_answer");
				this.SetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_question_answer", null, value);
				this.OnPropertyChanged("msdyn_question_answer");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_Appointments")]
		public System.Collections.Generic.IEnumerable<XrmEbc.Appointment> msdyn_question_Appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.Appointment>("msdyn_question_Appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_Appointments");
				this.SetRelatedEntities<XrmEbc.Appointment>("msdyn_question_Appointments", null, value);
				this.OnPropertyChanged("msdyn_question_Appointments");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<XrmEbc.AsyncOperation> msdyn_question_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.AsyncOperation>("msdyn_question_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_AsyncOperations");
				this.SetRelatedEntities<XrmEbc.AsyncOperation>("msdyn_question_AsyncOperations", null, value);
				this.OnPropertyChanged("msdyn_question_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<XrmEbc.BulkDeleteFailure> msdyn_question_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.BulkDeleteFailure>("msdyn_question_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_BulkDeleteFailures");
				this.SetRelatedEntities<XrmEbc.BulkDeleteFailure>("msdyn_question_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("msdyn_question_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_Emails")]
		public System.Collections.Generic.IEnumerable<XrmEbc.Email> msdyn_question_Emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.Email>("msdyn_question_Emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_Emails");
				this.SetRelatedEntities<XrmEbc.Email>("msdyn_question_Emails", null, value);
				this.OnPropertyChanged("msdyn_question_Emails");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_Faxes")]
		public System.Collections.Generic.IEnumerable<XrmEbc.Fax> msdyn_question_Faxes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.Fax>("msdyn_question_Faxes", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_Faxes");
				this.SetRelatedEntities<XrmEbc.Fax>("msdyn_question_Faxes", null, value);
				this.OnPropertyChanged("msdyn_question_Faxes");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_filtered_question
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_question> Referencedmsdyn_question_filtered_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_question>("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedmsdyn_question_filtered_question");
				this.SetRelatedEntities<XrmEbc.msdyn_question>("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedmsdyn_question_filtered_question");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_Letters")]
		public System.Collections.Generic.IEnumerable<XrmEbc.Letter> msdyn_question_Letters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.Letter>("msdyn_question_Letters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_Letters");
				this.SetRelatedEntities<XrmEbc.Letter>("msdyn_question_Letters", null, value);
				this.OnPropertyChanged("msdyn_question_Letters");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_logic_ComparisonQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_logic_ComparisonQuestion")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_responsecondition> msdyn_question_logic_ComparisonQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_responsecondition>("msdyn_question_logic_ComparisonQuestion", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_logic_ComparisonQuestion");
				this.SetRelatedEntities<XrmEbc.msdyn_responsecondition>("msdyn_question_logic_ComparisonQuestion", null, value);
				this.OnPropertyChanged("msdyn_question_logic_ComparisonQuestion");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<XrmEbc.MailboxTrackingFolder> msdyn_question_MailboxTrackingFolders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.MailboxTrackingFolder>("msdyn_question_MailboxTrackingFolders", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_MailboxTrackingFolders");
				this.SetRelatedEntities<XrmEbc.MailboxTrackingFolder>("msdyn_question_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("msdyn_question_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_msdyn_approvals
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_msdyn_approvals")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_approval> msdyn_question_msdyn_approvals
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_approval>("msdyn_question_msdyn_approvals", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_msdyn_approvals");
				this.SetRelatedEntities<XrmEbc.msdyn_approval>("msdyn_question_msdyn_approvals", null, value);
				this.OnPropertyChanged("msdyn_question_msdyn_approvals");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_msdyn_bookingalerts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_msdyn_bookingalerts")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_bookingalert> msdyn_question_msdyn_bookingalerts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_bookingalert>("msdyn_question_msdyn_bookingalerts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_msdyn_bookingalerts");
				this.SetRelatedEntities<XrmEbc.msdyn_bookingalert>("msdyn_question_msdyn_bookingalerts", null, value);
				this.OnPropertyChanged("msdyn_question_msdyn_bookingalerts");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_msdyn_surveyinvites
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_msdyn_surveyinvites")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_surveyinvite> msdyn_question_msdyn_surveyinvites
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_surveyinvite>("msdyn_question_msdyn_surveyinvites", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_msdyn_surveyinvites");
				this.SetRelatedEntities<XrmEbc.msdyn_surveyinvite>("msdyn_question_msdyn_surveyinvites", null, value);
				this.OnPropertyChanged("msdyn_question_msdyn_surveyinvites");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_PhoneCalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_PhoneCalls")]
		public System.Collections.Generic.IEnumerable<XrmEbc.PhoneCall> msdyn_question_PhoneCalls
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.PhoneCall>("msdyn_question_PhoneCalls", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_PhoneCalls");
				this.SetRelatedEntities<XrmEbc.PhoneCall>("msdyn_question_PhoneCalls", null, value);
				this.OnPropertyChanged("msdyn_question_PhoneCalls");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<XrmEbc.PrincipalObjectAttributeAccess> msdyn_question_PrincipalObjectAttributeAccesses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.PrincipalObjectAttributeAccess>("msdyn_question_PrincipalObjectAttributeAccesses", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<XrmEbc.PrincipalObjectAttributeAccess>("msdyn_question_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("msdyn_question_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_ProcessSession")]
		public System.Collections.Generic.IEnumerable<XrmEbc.ProcessSession> msdyn_question_ProcessSession
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.ProcessSession>("msdyn_question_ProcessSession", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_ProcessSession");
				this.SetRelatedEntities<XrmEbc.ProcessSession>("msdyn_question_ProcessSession", null, value);
				this.OnPropertyChanged("msdyn_question_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_questionresponse
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_questionresponse")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_questionresponse> msdyn_question_questionresponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_questionresponse>("msdyn_question_questionresponse", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_questionresponse");
				this.SetRelatedEntities<XrmEbc.msdyn_questionresponse>("msdyn_question_questionresponse", null, value);
				this.OnPropertyChanged("msdyn_question_questionresponse");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_RecurringAppointmentMasters")]
		public System.Collections.Generic.IEnumerable<XrmEbc.RecurringAppointmentMaster> msdyn_question_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.RecurringAppointmentMaster>("msdyn_question_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_RecurringAppointmentMasters");
				this.SetRelatedEntities<XrmEbc.RecurringAppointmentMaster>("msdyn_question_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("msdyn_question_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_ServiceAppointments")]
		public System.Collections.Generic.IEnumerable<XrmEbc.ServiceAppointment> msdyn_question_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.ServiceAppointment>("msdyn_question_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_ServiceAppointments");
				this.SetRelatedEntities<XrmEbc.ServiceAppointment>("msdyn_question_ServiceAppointments", null, value);
				this.OnPropertyChanged("msdyn_question_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_SocialActivities
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_SocialActivities")]
		public System.Collections.Generic.IEnumerable<XrmEbc.SocialActivity> msdyn_question_SocialActivities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.SocialActivity>("msdyn_question_SocialActivities", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_SocialActivities");
				this.SetRelatedEntities<XrmEbc.SocialActivity>("msdyn_question_SocialActivities", null, value);
				this.OnPropertyChanged("msdyn_question_SocialActivities");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_SyncErrors")]
		public System.Collections.Generic.IEnumerable<XrmEbc.SyncError> msdyn_question_SyncErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.SyncError>("msdyn_question_SyncErrors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_SyncErrors");
				this.SetRelatedEntities<XrmEbc.SyncError>("msdyn_question_SyncErrors", null, value);
				this.OnPropertyChanged("msdyn_question_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_Tasks")]
		public System.Collections.Generic.IEnumerable<XrmEbc.Task> msdyn_question_Tasks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.Task>("msdyn_question_Tasks", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_Tasks");
				this.SetRelatedEntities<XrmEbc.Task>("msdyn_question_Tasks", null, value);
				this.OnPropertyChanged("msdyn_question_Tasks");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_question_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<XrmEbc.UserEntityInstanceData> msdyn_question_UserEntityInstanceDatas
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.UserEntityInstanceData>("msdyn_question_UserEntityInstanceDatas", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_UserEntityInstanceDatas");
				this.SetRelatedEntities<XrmEbc.UserEntityInstanceData>("msdyn_question_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("msdyn_question_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:N msdyn_question_answer_n_n
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_answer_n_n")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_answer> msdyn_question_answer_n_n
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_question_answer_n_n", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_answer_n_n");
				this.SetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_question_answer_n_n", null, value);
				this.OnPropertyChanged("msdyn_question_answer_n_n");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_msdyn_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_msdyn_question")]
		public XrmEbc.BusinessUnit business_unit_msdyn_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.BusinessUnit>("business_unit_msdyn_question", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_question_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_question_createdby")]
		public XrmEbc.SystemUser lk_msdyn_question_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_question_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_question_createdonbehalfby")]
		public XrmEbc.SystemUser lk_msdyn_question_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_msdyn_question_createdonbehalfby");
				this.SetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_msdyn_question_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_question_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_question_modifiedby")]
		public XrmEbc.SystemUser lk_msdyn_question_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_question_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_question_modifiedonbehalfby")]
		public XrmEbc.SystemUser lk_msdyn_question_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_msdyn_question_modifiedonbehalfby");
				this.SetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_question_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_msdyn_question_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_msdyn_answer_msdyn_question_MeasuringAnswer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_measuringanswer")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_answer_msdyn_question_MeasuringAnswer")]
		public XrmEbc.msdyn_answer msdyn_msdyn_answer_msdyn_question_MeasuringAnswer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_answer>("msdyn_msdyn_answer_msdyn_question_MeasuringAnswer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_answer_msdyn_question_MeasuringAnswer");
				this.SetRelatedEntity<XrmEbc.msdyn_answer>("msdyn_msdyn_answer_msdyn_question_MeasuringAnswer", null, value);
				this.OnPropertyChanged("msdyn_msdyn_answer_msdyn_question_MeasuringAnswer");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_msdyn_question_msdyn_question_MeasuringQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_measuringquestion")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public XrmEbc.msdyn_question Referencingmsdyn_msdyn_question_msdyn_question_MeasuringQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencingmsdyn_msdyn_question_msdyn_question_MeasuringQuestion");
				this.SetRelatedEntity<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_question_MeasuringQuestion", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencingmsdyn_msdyn_question_msdyn_question_MeasuringQuestion");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_page_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_page_question")]
		public XrmEbc.msdyn_page msdyn_page_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_page>("msdyn_page_question", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_page_question");
				this.SetRelatedEntity<XrmEbc.msdyn_page>("msdyn_page_question", null, value);
				this.OnPropertyChanged("msdyn_page_question");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_question_filtered_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_filteredquestionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public XrmEbc.msdyn_question Referencingmsdyn_question_filtered_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_question>("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencingmsdyn_question_filtered_question");
				this.SetRelatedEntity<XrmEbc.msdyn_question>("msdyn_question_filtered_question", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencingmsdyn_question_filtered_question");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_question_questiontype
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiontypelookup")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_question_questiontype")]
		public XrmEbc.msdyn_questiontype msdyn_question_questiontype
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_questiontype>("msdyn_question_questiontype", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_question_questiontype");
				this.SetRelatedEntity<XrmEbc.msdyn_questiontype>("msdyn_question_questiontype", null, value);
				this.OnPropertyChanged("msdyn_question_questiontype");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_questiongroup_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiongroupid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_question")]
		public XrmEbc.msdyn_questiongroup msdyn_questiongroup_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_questiongroup>("msdyn_questiongroup_question", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_question");
				this.SetRelatedEntity<XrmEbc.msdyn_questiongroup>("msdyn_questiongroup_question", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_question");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_survey_msdyn_question_SurveyId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_surveyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_survey_msdyn_question_SurveyId")]
		public XrmEbc.msdyn_survey msdyn_survey_msdyn_question_SurveyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_survey>("msdyn_survey_msdyn_question_SurveyId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_survey_msdyn_question_SurveyId");
				this.SetRelatedEntity<XrmEbc.msdyn_survey>("msdyn_survey_msdyn_question_SurveyId", null, value);
				this.OnPropertyChanged("msdyn_survey_msdyn_question_SurveyId");
			}
		}
		
		/// <summary>
		/// N:1 team_msdyn_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msdyn_question")]
		public XrmEbc.Team team_msdyn_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.Team>("team_msdyn_question", null);
			}
		}
		
		/// <summary>
		/// N:1 user_msdyn_question
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_msdyn_question")]
		public XrmEbc.SystemUser user_msdyn_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("user_msdyn_question", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_question(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msdyn_questionid"] = base.Id;
                        break;
                    case "msdyn_questionid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}