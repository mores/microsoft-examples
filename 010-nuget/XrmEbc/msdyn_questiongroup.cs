//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XrmEbc
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.2.1.8586")]
	public enum msdyn_questiongroupState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Represents one or more questions - primarily created for grid questions
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msdyn_questiongroup")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "8.2.1.8586")]
	public partial class msdyn_questiongroup : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_ColumnHeaders = "msdyn_columnheaders";
			public const string msdyn_displaylogic = "msdyn_displaylogic";
			public const string msdyn_GridText = "msdyn_gridtext";
			public const string msdyn_ImportGrid = "msdyn_importgrid";
			public const string msdyn_ImportQuestion = "msdyn_importquestion";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_OrderIndex = "msdyn_orderindex";
			public const string msdyn_PageId = "msdyn_pageid";
			public const string msdyn_PluginIgnore = "msdyn_pluginignore";
			public const string msdyn_questiongroupId = "msdyn_questiongroupid";
			public const string Id = "msdyn_questiongroupid";
			public const string msdyn_questions = "msdyn_questions";
			public const string msdyn_RatingHalfStar = "msdyn_ratinghalfstar";
			public const string msdyn_RatingImageType = "msdyn_ratingimagetype";
			public const string msdyn_RatingNumberOfItems = "msdyn_ratingnumberofitems";
			public const string msdyn_ratingshowcancel = "msdyn_ratingshowcancel";
			public const string msdyn_RatingSize = "msdyn_ratingsize";
			public const string msdyn_RatingToolTips = "msdyn_ratingtooltips";
			public const string msdyn_ReportingText = "msdyn_reportingtext";
			public const string msdyn_RequireResponseForAllQuestions = "msdyn_requireresponseforallquestions";
			public const string msdyn_ScoreDefinition = "msdyn_scoredefinition";
			public const string msdyn_ScoreMaxValue = "msdyn_scoremaxvalue";
			public const string msdyn_ScoreMinValue = "msdyn_scoreminvalue";
			public const string msdyn_SectionId = "msdyn_sectionid";
			public const string msdyn_SetDirty = "msdyn_setdirty";
			public const string msdyn_Type = "msdyn_type";
			public const string msdyn_UseVerticalText = "msdyn_useverticaltext";
			public const string msdyn_Visibility = "msdyn_visibility";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string business_unit_msdyn_questiongroup = "business_unit_msdyn_questiongroup";
			public const string lk_msdyn_questiongroup_createdby = "lk_msdyn_questiongroup_createdby";
			public const string lk_msdyn_questiongroup_createdonbehalfby = "lk_msdyn_questiongroup_createdonbehalfby";
			public const string lk_msdyn_questiongroup_modifiedby = "lk_msdyn_questiongroup_modifiedby";
			public const string lk_msdyn_questiongroup_modifiedonbehalfby = "lk_msdyn_questiongroup_modifiedonbehalfby";
			public const string msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion = "msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion";
			public const string Referencingmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid = "msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid";
			public const string msdyn_page_questiongroup = "msdyn_page_questiongroup";
			public const string msdyn_section_questiongroup = "msdyn_section_questiongroup";
			public const string team_msdyn_questiongroup = "team_msdyn_questiongroup";
			public const string user_msdyn_questiongroup = "user_msdyn_questiongroup";
		}

		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_questiongroup() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "msdyn_questiongroup";
		
		public const int EntityTypeCode = 10297;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Shows the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows the sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Shows the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Carriage return list of headers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_columnheaders")]
		public string msdyn_ColumnHeaders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_columnheaders");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ColumnHeaders");
				this.SetAttributeValue("msdyn_columnheaders", value);
				this.OnPropertyChanged("msdyn_ColumnHeaders");
			}
		}
		
		/// <summary>
		/// Select whether to display the logic.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_displaylogic")]
		public object msdyn_displaylogic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_displaylogic");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_displaylogic");
				this.SetAttributeValue("msdyn_displaylogic", value);
				this.OnPropertyChanged("msdyn_displaylogic");
			}
		}
		
		/// <summary>
		/// Type the text for the grid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gridtext")]
		public string msdyn_GridText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_gridtext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_GridText");
				this.SetAttributeValue("msdyn_gridtext", value);
				this.OnPropertyChanged("msdyn_GridText");
			}
		}
		
		/// <summary>
		/// Shows the grid associated with the grid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_importgrid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_ImportGrid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_importgrid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ImportGrid");
				this.SetAttributeValue("msdyn_importgrid", value);
				this.OnPropertyChanged("msdyn_ImportGrid");
			}
		}
		
		/// <summary>
		/// Provides advanced functionality to import and transpose a question and its answers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_importquestion")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_ImportQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_importquestion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ImportQuestion");
				this.SetAttributeValue("msdyn_importquestion", value);
				this.OnPropertyChanged("msdyn_ImportQuestion");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_name")]
		public string msdyn_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_name");
				this.SetAttributeValue("msdyn_name", value);
				this.OnPropertyChanged("msdyn_name");
			}
		}
		
		/// <summary>
		/// Display order of this question group in relation to others
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orderindex")]
		public System.Nullable<int> msdyn_OrderIndex
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_orderindex");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_OrderIndex");
				this.SetAttributeValue("msdyn_orderindex", value);
				this.OnPropertyChanged("msdyn_OrderIndex");
			}
		}
		
		/// <summary>
		/// Shows the related page.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pageid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_PageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_pageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_PageId");
				this.SetAttributeValue("msdyn_pageid", value);
				this.OnPropertyChanged("msdyn_PageId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pluginignore")]
		public string msdyn_PluginIgnore
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_pluginignore");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_PluginIgnore");
				this.SetAttributeValue("msdyn_pluginignore", value);
				this.OnPropertyChanged("msdyn_PluginIgnore");
			}
		}
		
		/// <summary>
		/// Shows the entity instances.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiongroupid")]
		public System.Nullable<System.Guid> msdyn_questiongroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("msdyn_questiongroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroupId");
				this.SetAttributeValue("msdyn_questiongroupid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("msdyn_questiongroupId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questiongroupid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.msdyn_questiongroupId = value;
			}
		}
		
		/// <summary>
		/// Type the questions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_questions")]
		public string msdyn_questions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_questions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questions");
				this.SetAttributeValue("msdyn_questions", value);
				this.OnPropertyChanged("msdyn_questions");
			}
		}
		
		/// <summary>
		/// Should the rating control show half stars, for example,  4.5?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratinghalfstar")]
		public System.Nullable<bool> msdyn_RatingHalfStar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ratinghalfstar");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingHalfStar");
				this.SetAttributeValue("msdyn_ratinghalfstar", value);
				this.OnPropertyChanged("msdyn_RatingHalfStar");
			}
		}
		
		/// <summary>
		/// Select an image type for rating.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingimagetype")]
		public object msdyn_RatingImageType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_ratingimagetype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingImageType");
				this.SetAttributeValue("msdyn_ratingimagetype", value);
				this.OnPropertyChanged("msdyn_RatingImageType");
			}
		}
		
		/// <summary>
		/// Select the number of rating items.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingnumberofitems")]
		public System.Nullable<int> msdyn_RatingNumberOfItems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_ratingnumberofitems");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingNumberOfItems");
				this.SetAttributeValue("msdyn_ratingnumberofitems", value);
				this.OnPropertyChanged("msdyn_RatingNumberOfItems");
			}
		}
		
		/// <summary>
		/// Select whether a rating can be canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingshowcancel")]
		public System.Nullable<bool> msdyn_ratingshowcancel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_ratingshowcancel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ratingshowcancel");
				this.SetAttributeValue("msdyn_ratingshowcancel", value);
				this.OnPropertyChanged("msdyn_ratingshowcancel");
			}
		}
		
		/// <summary>
		/// Size of rating image
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingsize")]
		public object msdyn_RatingSize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_ratingsize");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingSize");
				this.SetAttributeValue("msdyn_ratingsize", value);
				this.OnPropertyChanged("msdyn_RatingSize");
			}
		}
		
		/// <summary>
		/// Tool tips to display when respondent mouse is hovered over each item.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_ratingtooltips")]
		public string msdyn_RatingToolTips
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_ratingtooltips");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RatingToolTips");
				this.SetAttributeValue("msdyn_ratingtooltips", value);
				this.OnPropertyChanged("msdyn_RatingToolTips");
			}
		}
		
		/// <summary>
		/// Reporting text can be used as an alternative and abbreviated text for reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_reportingtext")]
		public string msdyn_ReportingText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_reportingtext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ReportingText");
				this.SetAttributeValue("msdyn_reportingtext", value);
				this.OnPropertyChanged("msdyn_ReportingText");
			}
		}
		
		/// <summary>
		/// Select whether a response is required for all questions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_requireresponseforallquestions")]
		public System.Nullable<bool> msdyn_RequireResponseForAllQuestions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_requireresponseforallquestions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_RequireResponseForAllQuestions");
				this.SetAttributeValue("msdyn_requireresponseforallquestions", value);
				this.OnPropertyChanged("msdyn_RequireResponseForAllQuestions");
			}
		}
		
		/// <summary>
		/// Enter a definition for the score.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoredefinition")]
		public object msdyn_ScoreDefinition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_scoredefinition");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreDefinition");
				this.SetAttributeValue("msdyn_scoredefinition", value);
				this.OnPropertyChanged("msdyn_ScoreDefinition");
			}
		}
		
		/// <summary>
		/// Select the maximum score value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoremaxvalue")]
		public System.Nullable<int> msdyn_ScoreMaxValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scoremaxvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreMaxValue");
				this.SetAttributeValue("msdyn_scoremaxvalue", value);
				this.OnPropertyChanged("msdyn_ScoreMaxValue");
			}
		}
		
		/// <summary>
		/// Select the minimum score value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_scoreminvalue")]
		public System.Nullable<int> msdyn_ScoreMinValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_scoreminvalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_ScoreMinValue");
				this.SetAttributeValue("msdyn_scoreminvalue", value);
				this.OnPropertyChanged("msdyn_ScoreMinValue");
			}
		}
		
		/// <summary>
		/// Shows the unique reference identifier of the related section.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sectionid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_SectionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_sectionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SectionId");
				this.SetAttributeValue("msdyn_sectionid", value);
				this.OnPropertyChanged("msdyn_SectionId");
			}
		}
		
		/// <summary>
		/// Select whether to check if the grid is in a consistent state.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_setdirty")]
		public string msdyn_SetDirty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyn_setdirty");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_SetDirty");
				this.SetAttributeValue("msdyn_setdirty", value);
				this.OnPropertyChanged("msdyn_SetDirty");
			}
		}
		
		/// <summary>
		/// Select the type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_type")]
		public object msdyn_Type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_type");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Type");
				this.SetAttributeValue("msdyn_type", value);
				this.OnPropertyChanged("msdyn_Type");
			}
		}
		
		/// <summary>
		/// Rotate the text 90 degrees
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_useverticaltext")]
		public object msdyn_UseVerticalText
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_useverticaltext");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_UseVerticalText");
				this.SetAttributeValue("msdyn_useverticaltext", value);
				this.OnPropertyChanged("msdyn_UseVerticalText");
			}
		}
		
		/// <summary>
		/// Select whether the grid is visible.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_visibility")]
		public object msdyn_Visibility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("msdyn_visibility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_Visibility");
				this.SetAttributeValue("msdyn_visibility", value);
				this.OnPropertyChanged("msdyn_Visibility");
			}
		}
		
		/// <summary>
		/// Shows the date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Shows the business unit that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Shows the status of the question group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<XrmEbc.msdyn_questiongroupState> statecode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((XrmEbc.msdyn_questiongroupState)(System.Enum.ToObject(typeof(XrmEbc.msdyn_questiongroupState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value.Value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
		
		/// <summary>
		/// Shows the reason for the status of the question group.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public object statuscode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<object>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("statuscode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Shows the time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_questiongroup> Referencedmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencedmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid");
				this.SetRelatedEntities<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_answer
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_answer")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_answer> msdyn_questiongroup_answer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_questiongroup_answer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_answer");
				this.SetRelatedEntities<XrmEbc.msdyn_answer>("msdyn_questiongroup_answer", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_answer");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<XrmEbc.AsyncOperation> msdyn_questiongroup_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.AsyncOperation>("msdyn_questiongroup_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_AsyncOperations");
				this.SetRelatedEntities<XrmEbc.AsyncOperation>("msdyn_questiongroup_AsyncOperations", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<XrmEbc.BulkDeleteFailure> msdyn_questiongroup_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.BulkDeleteFailure>("msdyn_questiongroup_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_BulkDeleteFailures");
				this.SetRelatedEntities<XrmEbc.BulkDeleteFailure>("msdyn_questiongroup_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<XrmEbc.MailboxTrackingFolder> msdyn_questiongroup_MailboxTrackingFolders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.MailboxTrackingFolder>("msdyn_questiongroup_MailboxTrackingFolders", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_MailboxTrackingFolders");
				this.SetRelatedEntities<XrmEbc.MailboxTrackingFolder>("msdyn_questiongroup_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_msdyn_responseaction_Grid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_msdyn_responseaction_Grid")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_responseaction> msdyn_questiongroup_msdyn_responseaction_Grid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_responseaction>("msdyn_questiongroup_msdyn_responseaction_Grid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_msdyn_responseaction_Grid");
				this.SetRelatedEntities<XrmEbc.msdyn_responseaction>("msdyn_questiongroup_msdyn_responseaction_Grid", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_msdyn_responseaction_Grid");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<XrmEbc.PrincipalObjectAttributeAccess> msdyn_questiongroup_PrincipalObjectAttributeAccesses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.PrincipalObjectAttributeAccess>("msdyn_questiongroup_PrincipalObjectAttributeAccesses", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<XrmEbc.PrincipalObjectAttributeAccess>("msdyn_questiongroup_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_ProcessSession")]
		public System.Collections.Generic.IEnumerable<XrmEbc.ProcessSession> msdyn_questiongroup_ProcessSession
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.ProcessSession>("msdyn_questiongroup_ProcessSession", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_ProcessSession");
				this.SetRelatedEntities<XrmEbc.ProcessSession>("msdyn_questiongroup_ProcessSession", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_question
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_question")]
		public System.Collections.Generic.IEnumerable<XrmEbc.msdyn_question> msdyn_questiongroup_question
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.msdyn_question>("msdyn_questiongroup_question", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_question");
				this.SetRelatedEntities<XrmEbc.msdyn_question>("msdyn_questiongroup_question", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_question");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_SyncErrors")]
		public System.Collections.Generic.IEnumerable<XrmEbc.SyncError> msdyn_questiongroup_SyncErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.SyncError>("msdyn_questiongroup_SyncErrors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_SyncErrors");
				this.SetRelatedEntities<XrmEbc.SyncError>("msdyn_questiongroup_SyncErrors", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_questiongroup_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_questiongroup_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<XrmEbc.UserEntityInstanceData> msdyn_questiongroup_UserEntityInstanceDatas
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<XrmEbc.UserEntityInstanceData>("msdyn_questiongroup_UserEntityInstanceDatas", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_questiongroup_UserEntityInstanceDatas");
				this.SetRelatedEntities<XrmEbc.UserEntityInstanceData>("msdyn_questiongroup_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("msdyn_questiongroup_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_msdyn_questiongroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_msdyn_questiongroup")]
		public XrmEbc.BusinessUnit business_unit_msdyn_questiongroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.BusinessUnit>("business_unit_msdyn_questiongroup", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_questiongroup_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_questiongroup_createdby")]
		public XrmEbc.SystemUser lk_msdyn_questiongroup_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_questiongroup_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_questiongroup_createdonbehalfby")]
		public XrmEbc.SystemUser lk_msdyn_questiongroup_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_msdyn_questiongroup_createdonbehalfby");
				this.SetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_msdyn_questiongroup_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_questiongroup_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_questiongroup_modifiedby")]
		public XrmEbc.SystemUser lk_msdyn_questiongroup_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_msdyn_questiongroup_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_msdyn_questiongroup_modifiedonbehalfby")]
		public XrmEbc.SystemUser lk_msdyn_questiongroup_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_msdyn_questiongroup_modifiedonbehalfby");
				this.SetRelatedEntity<XrmEbc.SystemUser>("lk_msdyn_questiongroup_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_msdyn_questiongroup_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_importquestion")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion")]
		public XrmEbc.msdyn_question msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion");
				this.SetRelatedEntity<XrmEbc.msdyn_question>("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion", null, value);
				this.OnPropertyChanged("msdyn_msdyn_question_msdyn_questiongroup_ImportQuestion");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_importgrid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public XrmEbc.msdyn_questiongroup Referencingmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Referencingmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid");
				this.SetRelatedEntity<XrmEbc.msdyn_questiongroup>("msdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("Referencingmsdyn_msdyn_questiongroup_msdyn_questiongroup_ImportGrid");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_page_questiongroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_pageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_page_questiongroup")]
		public XrmEbc.msdyn_page msdyn_page_questiongroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_page>("msdyn_page_questiongroup", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_page_questiongroup");
				this.SetRelatedEntity<XrmEbc.msdyn_page>("msdyn_page_questiongroup", null, value);
				this.OnPropertyChanged("msdyn_page_questiongroup");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_section_questiongroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_sectionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_section_questiongroup")]
		public XrmEbc.msdyn_section msdyn_section_questiongroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.msdyn_section>("msdyn_section_questiongroup", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_section_questiongroup");
				this.SetRelatedEntity<XrmEbc.msdyn_section>("msdyn_section_questiongroup", null, value);
				this.OnPropertyChanged("msdyn_section_questiongroup");
			}
		}
		
		/// <summary>
		/// N:1 team_msdyn_questiongroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_msdyn_questiongroup")]
		public XrmEbc.Team team_msdyn_questiongroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.Team>("team_msdyn_questiongroup", null);
			}
		}
		
		/// <summary>
		/// N:1 user_msdyn_questiongroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_msdyn_questiongroup")]
		public XrmEbc.SystemUser user_msdyn_questiongroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<XrmEbc.SystemUser>("user_msdyn_questiongroup", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msdyn_questiongroup(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msdyn_questiongroupid"] = base.Id;
                        break;
                    case "msdyn_questiongroupid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}